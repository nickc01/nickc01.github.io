{
    "projects": {
        "inferno-king-grimm": {
            "name": "Inferno King Grimm",
            "date": "6/29/2020",
            "description": [
                "Inferno King Grimm is a mod for Hollow Knight that takes the existing Nightmare King Grimm bossfight and changes it up in significant ways",
                "The boss now has 3 distinct phases, each with varying difficulty",
                "There is even a harder mode geared towards experts of the game"
            ],
            "skills": [
                "Using a pixel shader over the camera to tint everything blue",
                "Using object pooling to spawn and destroy many projectiles rapidly"
            ],
            "tags": [
                "C#",
                "Unity3D",
                "HLSL Shaders"
            ],
            "image": "screenshots/inferno-king-grimm.jpg",
            "imageAVIF": "screenshots/avif/inferno-king-grimm.avif",
            "video": "videos/inferno-king-grimm.m4v",
            "color": "#f32d49",
            "textColor": "#fcccd4",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "titleColor": "#fcccd4",
            "titleWidth": 150,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/Inferno-King-Grimm"
                },
                {
                    "name": "Hard Mode Video",
                    "link": "https://youtu.be/OhKrdlC6nNk"
                },
                {
                    "name": "Video",
                    "link": "https://youtu.be/R20mWJJOJ0w"
                }
            ]
        },
        "corrupted-kin": {
            "name": "Corrupted Kin",
            "date": "5/7/2021",
            "description": [
                "Corrupted Kin is the second mod I made for Hollow Knight that takes the existing 'Lost Kin' bossfight and changes it up in significant ways",
                "The boss is now split up into 4 distinct phases, each harder than the last",
                "During the second phase, a water wave system is brought into the mix",
                "The boss can create waves that the player needs to dodge"
            ],
            "skills": [
                "Created a Math function to determine the velocity needed for a projectile to land in a specific spot",
                "Created a custom GPU shader for displaying the wave system",
                "Using sine and cosine functions to generate waves",
                "Created a custom script to generate mesh verticies at runtime"
            ],
            "tags": [
                "C#",
                "Unity3D",
                "HLSL Shaders"
            ],
            "image": "screenshots/corrupted-kin.jpg",
            "imageAVIF": "screenshots/avif/corrupted-kin.avif",
            "video": "videos/corrupted-kin.m4v",
            "color": "#e68a24",
            "textColor": "#d28e3d",
            "titleColor": "#2e383a",
            "titleWidth": 110,
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/Corrupted-Kin"
                },
                {
                    "name": "Video",
                    "link": "https://youtu.be/8vQiSoLYrao"
                },
                {
                    "name": "Wave System",
                    "link": "https://github.com/nickc01/Corrupted-Kin/wiki/Wave-System"
                }
            ]
        },
        "badland-battles": {
            "name": "Badland Battles",
            "date": "3/27/2021",
            "description": [
                "Badland battles is a top-down shooting game made for a college course",
                "It's a simple game where you play as a soldier in the middle of a desert arena, and your goal is to defeat the onslaught of enemy troops",
                "There are different types of guns you can equip, and there are kits for refilling your ammo and health",
                "This demo game is designed to test out some of the more advanced features of Unity"
            ],
            "skills": [
                "Playing Mixamo Animations using the Mechanim system",
                "Using root motion for the animations to make them move around",
                "Baking lights, probes and reflections so pre-calculate the lighting",
                "Playing particle effects",
                "Using spatial and non-spatial audio sources",
                "Freezing time when the game is paused",
                "Using the nav-mesh system to make the enemies walk towards the player and avoid obstacles"
            ],
            "tags": [
                "C#",
                "Unity3D",
                "NavMesh",
                "Animations",
                "Baked Lighting"
            ],
            "image": "screenshots/badland-battles.jpg",
            "imageAVIF": "screenshots/avif/badland-battles.avif",
            "video": "videos/badland-battles.m4v",
            "color": "#ec964f",
            "textColor": "#fff3e6",
            "backgroundColor": "#2e383aBB",
            "perlinColor": "#dd8833",
            "titleColor": "#fff3e6",
            "titleWidth": 130,
            "perlinBackgroundColor": "#6a4623",
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/Badland-Battles"
                },
                {
                    "name": "Play",
                    "link": "https://nickc01.github.io/Online-Games/Badland%20Battles/"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/Badland-Battles/releases/latest/download/Badland.Battle.zip"
                }
            ]
        },
        "nitro": {
            "name": "Nitro",
            "date": "5/15/2021",
            "description": [
                "Nitro is a library that makes it easier to create custom powerups for your game",
                "Whether it be a racing game, an RPG game, or any game you want",
                "It also has support for having combinable powerups, where two or more different powerups can have their abilities combined for a more powerful effect",
                "The download link below contains a small racing game demo that demonstrates Nitro's Combinable Powerup System"
            ],
            "skills": [
                "Using DocFX to create guides on how to use the library",
                "Using object oriented programming to create different types of powerups",
                "Using delegates to chain powerups together and combine their effects"
            ],
            "tags": [
                "C#",
                "Unity3D",
                "DocFX"
            ],
            "image": "screenshots/nitro.jpg",
            "imageAVIF": "screenshots/avif/nitro.avif",
            "video": "videos/nitro.mp4",
            "color": "#7b49aa",
            "textColor": "#dddddd",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "titleWidth": 40,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/Nitro"
                },
                {
                    "name": "Docs",
                    "link": "https://nickc01.github.io/Nitro/docs/"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/Nitro/releases/latest/download/Nitro.Windows.Build.zip"
                }
            ]
        },
        "mega-muncher": {
            "name": "Mega Muncher",
            "date": "4/24/2019",
            "description": [
                "Mega Muncher is a game similar to pac-man, made as a final project for a college class",
                "It was made over the course of a few days using the Unity Engine"
            ],
            "skills": [
                "Using Unity's tilemap system to build 2D maps quickly"
            ],
            "credits": [
                {
                    "name": "Music",
                    "label": "Make a Game - Sixty Minutes FREE Music",
                    "link": "https://makeagame.bandcamp.com/album/sixty-minutes-free-music"
                },
                {
                    "name": "Font",
                    "label": "PC Senior Font",
                    "link": "https://www.1001fonts.com/pc-senior-font.html"
                },
                {
                    "name": "Sound Effects",
                    "label": "Sound Effects 8-Bit Style",
                    "link": "https://opengameart.org/content/512-sound-effects-8-bit-style"
                },
                {
                    "name": "Explosion",
                    "label": "Explosion",
                    "link": "https://opengameart.org/content/explosion-3"
                }
            ],
            "tags": [
                "C#",
                "Unity3D"
            ],
            "image": "screenshots/mega-muncher.png",
            "imageAVIF": "screenshots/avif/mega-muncher.avif",
            "video": "videos/mega-muncher.m4v",
            "color": "#777777",
            "textColor": "#dddddd",
            "titleWidth": 120,
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/Mega-Muncher"
                },
                {
                    "name": "Play",
                    "link": "https://nickc01.github.io/Online-Games/Mega%20Muncher/"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/Mega-Muncher/releases/latest/download/Mega.Muncher.Windows.Build.zip"
                }
            ]
        },
        "ultimate-asteroid-tactical-control": {
            "name": "Ultimate Asteroid Tactical Control",
            "date": "4/7/2019",
            "description": [
                "Ultimate Asteroid Tactical Control (UAT), is a simple asteroid game where you pilot a space ship and shoot down asteroids",
                "It was one of the first projects I have done for a game programming class at college, and was made to show the basics of using Unity"
            ],
            "skills": [
                "Moving different background elements at different rates for a parallax effect",
                "Using rigidbody components to move objects",
                "Instantiating objects at runtime",
                "Displaying sprites on objects"
            ],
            "credits": [
                {
                    "name": "Spaceship",
                    "label": "Spaceship 1",
                    "link": "https://opengameart.org/content/spaceship-1"
                },
                {
                    "name": "Background",
                    "label": "Parallax Space Scene",
                    "link": "https://opengameart.org/content/parallax-space-scene-seamlessly-scrolls-too"
                },
                {
                    "name": "Asteroids",
                    "label": "Low Poly Rocks",
                    "link": "https://opengameart.org/content/low-poly-rocks"
                },
                {
                    "name": "Laser and Explosion Sound Effects",
                    "label": "512 8 bit Sound Effects",
                    "link": "https://opengameart.org/content/512-sound-effects-8-bit-style"
                },
                {
                    "name": "Laser Beam Image",
                    "label": "Lasers and Beams",
                    "link": "https://opengameart.org/content/lasers-and-beams"
                },
                {
                    "name": "Explosion Image",
                    "label": "Explosion",
                    "link": "https://opengameart.org/content/explosion-3"
                },
                {
                    "name": "Font",
                    "label": "Origami Mommy Font",
                    "link": "https://www.1001fonts.com/origami-mommy-font.html"
                }
            ],
            "tags": [
                "C#",
                "Unity3D"
            ],
            "image": "screenshots/ultimate-asteroid-tactical-control.jpg",
            "imageAVIF": "screenshots/avif/ultimate-asteroid-tactical-control.avif",
            "video": "videos/ultimate-asteroid-tactical-control.m4v",
            "color": "#4e42f5",
            "textColor": "#c7a1ff",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "titleWidth": 265,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/Ultimate-Asteroid-Tactical-Control"
                },
                {
                    "name": "Play",
                    "link": "https://nickc01.github.io/Online-Games/UATC/"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/Ultimate-Asteroid-Tactical-Control/releases/latest/download/UAT.Windows.Build.zip"
                }
            ]
        },
        "uatanks": {
            "name": "UATanks",
            "date": "6/7/2019",
            "description": [
                "UATanks is a top-down tank shooting game, where your goal is to control a tank in an arena and destroy all the other tanks to win",
                "It is one of the larger projects I have made during college, and is used to demonstrate a variety of different unity features and skills"
            ],
            "skills": [
                "Using object oriented programming to develop tanks with different behaviours",
                "Demonstrating an options menu used for customizing options",
                "Having a multitude of different powerups and effects",
                "Having a seperate camera for displaying a mini-map in the bottom-right corner",
                "Using two cameras to render to the same screen. Used for splitscreen multiplayer",
                "Procedurally generating different maps",
                "A highscore system that retains the scores even when the game closes",
                "Storing options to the hard disk using PlayerPrefs"
            ],
            "credits": [
                {
                    "name": "Font",
                    "label": "Kenney Fonts",
                    "link": "https://www.kenney.nl/assets/kenney-fonts"
                },
                {
                    "name": "Blur Shader",
                    "label": "Background Blur Shader",
                    "link": "https://forum.unity.com/threads/solved-dynamic-blurred-background-on-ui.345083/#post-2853442"
                },
                {
                    "name": "Icons",
                    "label": "Game Icons",
                    "link": "https://www.kenney.nl/assets/game-icons"
                },
                {
                    "name": "Interface Sounds",
                    "label": "UI Sound Effects",
                    "link": "https://opengameart.org/content/51-ui-sound-effects-buttons-switches-and-clicks"
                },
                {
                    "name": "Explosion Image",
                    "label": "Explosion 3",
                    "link": "https://opengameart.org/content/explosion-3"
                },
                {
                    "name": "Menu Music",
                    "label": "JoTech - Awaken",
                    "link": "https://jotech.bandcamp.com/album/awaken"
                },
                {
                    "name": "Game Music",
                    "label": "JoTech - Understand",
                    "link": "https://jotech.bandcamp.com/album/understand"
                },
                {
                    "name": "UI Assets",
                    "label": "UI Pack",
                    "link": "https://www.kenney.nl/assets/ui-pack"
                },
                {
                    "name": "ReadOnlyAttribute Code",
                    "label": "ReadOnlyAttribute.cs",
                    "link": "https://gist.github.com/LotteMakesStuff/c0a3b404524be57574ffa5f8270268ea"
                },
                {
                    "name": "Tank Model",
                    "label": "Low Poly Tank Assets",
                    "link": "https://opengameart.org/content/low-poly-tank-assets"
                },
                {
                    "name": "Sound Effects",
                    "label": "512 Sound Effects 8 Bit Style",
                    "link": "https://opengameart.org/content/512-sound-effects-8-bit-style"
                },
                {
                    "name": "Powerups",
                    "label": "3D Collectable Pack",
                    "link": "https://opengameart.org/content/3d-collectable-pack"
                },
                {
                    "name": "Bomb Powerup",
                    "label": "Weapon Pack",
                    "link": "https://opengameart.org/content/weapon-pack"
                }
            ],
            "tags": [
                "C#",
                "Unity3D",
                "Multiplayer"
            ],
            "image": "screenshots/uatanks.jpg",
            "imageAVIF": "screenshots/avif/uatanks.avif",
            "video": "videos/uatanks.mp4",
            "color": "#ff4040",
            "textColor": "#dddddd",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "titleColor": "#fae6e6",
            "titleWidth": 70,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/UATanks"
                },
                {
                    "name": "Play",
                    "link": "https://nickc01.github.io/Online-Games/UATanks/"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/UATanks/releases/latest/download/UATanks.Windows.Build.zip"
                }
            ]
        },
        "hacktrons": {
            "name": "Hacktrons",
            "date": "2/4/2019",
            "description": [
                "Hacktrons is a turn-based strategy game made for college class",
                "It is based on an old Lego game called \"Spybotics\" : The Nightball Incident, and I decided to build a recreation of it within the span of two weeks",
                "The first week was mostly focused on making a trailer for the game (since the class required that too), and the second week was focused on finishing a workable verison of the game",
                "In the game, you play as a CIA agent, defeating viruses in network nodes by uploading programs to destroy them",
                "When it's your turn, you can move each of your programs around a map, and if they are near an enemy, you can attack them",
                "Once all of your programs have done their moves, then it will switch to the enemy's turn, and they have the ability to attack you",
                "This goes back and forth until you or the enemy looses all of their programs"
            ],
            "skills": [
                "Using the program <a href=\"https://www.mapeditor.org\" target=\"_blank\" rel=\"noopener noreferrer\">Tiled</a> to create each of the maps"
            ],
            "credits": [
                {
                    "name": "8-Bit Sounds",
                    "label": "512 Sound Effects 8-Bit Style",
                    "link": "https://opengameart.org/content/512-sound-effects-8-bit-style"
                },
                {
                    "name": "8-Bit Font",
                    "label": "8-Bit Operator Plus",
                    "link": "https://www.1001freefonts.com/8-bit-operator.font"
                },
                {
                    "name": "Music",
                    "label": "Incompetech Interloper",
                    "link": "https://incompetech.com/music/royalty-free/index.html?isrc=USUAN1100401"
                },
                {
                    "name": "Tutorial Text Sounds",
                    "label": "Robots and Computers Sound Effects",
                    "link": "https://www.amazon.com/dp/B008OBLI2G/?coliid=I1LOPLWQYEV6U&colid=2LABLE1NWXHIC&psc=0&ref_=lv_ov_lig_dp_it"
                }
            ],
            "tags": [
                "C#",
                "Unity3D"
            ],
            "image": "screenshots/hacktrons.png",
            "imageAVIF": "screenshots/avif/hacktrons.avif",
            "video": "videos/hacktrons.mp4",
            "color": "#3464de",
            "textColor": "#99b6ff",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "titleColor": "#1d2425",
            "titleWidth": 85,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/Hacktrons"
                },
                {
                    "name": "Play",
                    "link": "https://nickc01.github.io/Online-Games/Hacktrons/"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/Hacktrons/releases/latest/download/Hacktrons.Windows.Build.zip"
                }
            ]
        },
        "dungeon-escape": {
            "name": "Dungeon Escape",
            "date": "3/22/2020",
            "description": [
                "Dungeon Escape is a small top-down adventure game I made within the span of two weeks",
                "It was made using the C++ programming language, and uses the SFML library for the graphics and player input",
                "In the game, you use the arrow keys to move a wizard arround, and you can left click to fire a magic orb that stuns any enemies it touches",
                "This project also uses CMake, which is a build system used for building C++ projects across multiple platforms"
            ],
            "skills": [
                "Using C++14 to create a game",
                "Procedurally generating a new map each time the game is launched",
                "Using the SFML library for displaying graphics and accepting user input",
                "Using CMake to build the game for multiple different platforms",
                "Using multiple threads to speed up the pathfinding algorithm for the enemies",
                "Playing different animations depending on the direction of the player"
            ],
            "credits": [
                {
                    "name": "Sprites",
                    "label": "8x8 Black Mage",
                    "link": "https://opengameart.org/content/8x8-black-mage"
                },
                {
                    "name": "Other Sprites and UI Elements",
                    "label": "Rogue like Char/Enemies/Tiles",
                    "link": "https://opengameart.org/content/8x8-rogue-like-charenemiestiles"
                },
                {
                    "name": "Room Tiles",
                    "label": "Bit Pack",
                    "link": "https://www.kenney.nl/assets/bit-pack"
                },
                {
                    "name": "Heart Image",
                    "label": "Heart 2",
                    "link": "https://opengameart.org/content/heart2-1616"
                },
                {
                    "name": "Font",
                    "label": "Squares Bold Font",
                    "link": "https://www.1001fonts.com/squares-bold-font.html"
                }
            ],
            "tags": [
                "C++",
                "SFML",
                "CMake",
                "Multithreading"
            ],
            "image": "screenshots/dungeon-escape.png",
            "imageAVIF": "screenshots/avif/dungeon-escape.avif",
            "video": "videos/dungeon-escape.m4v",
            "color": "#956a82",
            "textColor": "#cfc6b8",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "titleWidth": 135,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/Dungeon-Escape"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/Dungeon-Escape/releases/latest/download/Dungeon-Escape-Windows.zip"
                }
            ]
        },
        "smarttubes": {
            "name": "Smart Tubes",
            "date": "9/11/2016",
            "description": [
                "Smart Tubes is an item transportation mod I made for the 2D survival game Starbound",
                "It adds the ability to transport items from one place to another via a network of interconnected pipes called conduits",
                "You can extract items from a storage crate using an extraction conduit, and you can insert items into a crate using the insertion conduit",
                "You would also be able to transport liquids around, and could see the entire network at once using the Conduit Terminal"
            ],
            "skills": [
                "Rendering a different sprite depending on an object's surroundings",
                "Using Dijkstra's pathfinding algorithm to transport items from one place to another",
                "Using a render texture to display the entire network via the Conduit Terminal"
            ],
            "tags": [
                "Lua",
                "Pathfinding"
            ],
            "image": "screenshots/smarttubes.png",
            "imageAVIF": "screenshots/avif/smarttubes.avif",
            "video": "videos/smarttubes.m4v",
            "color": "#ff4040",
            "textColor": "#dddddd",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "titleWidth": 100,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/SmartTubes"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/SmartTubes/releases/tag/1.2.5"
                },
                {
                    "name": "Forums Page",
                    "link": "https://community.playstarbound.com/resources/smart-tubes.4152/"
                },
                {
                    "name": "Video by FireSpark81",
                    "link": "https://youtu.be/af2LSlEBHQ4"
                }
            ]
        },
        "ceo-project": {
            "name": "Benefits Calculator",
            "date": "4/25/2020",
            "description": [
                "The Employee Benefits Calculator is a Windows Application that allows you to keep track of a list of employees at a company and perform calculations on each employee",
                "You can input an employee's salary, years worked, age, name, etc, and all this information will be stored in a list",
                "Once added, you can calculate an employee's raise, bonuses, vacation days and several others",
                "This list can then be saved to a file on your computer and loaded back up at any time",
                "It also uses the <a href=\"https://thielj.github.io/MetroFramework/\" target=\"_blank\" rel=\"noopener noreferrer\">Metro UI Framework</a> to make it look fancy, and it even allows for custom themes"
            ],
            "skills": [
                "Using WinForms and .Net Framework to design a custom Windows Application",
                "Storing information to an external file and loading them back up again",
                "Allowing the user to modify and delete elements in the employee list"
            ],
            "tags": [
                "C#",
                "Windows App",
                "Metro UI",
                "WinForms"
            ],
            "image": "screenshots/ceo-project.png",
            "imageAVIF": "screenshots/avif/ceo-project.avif",
            "video": "videos/ceo-project.m4v",
            "color": "#f03060",
            "textColor": "#dddddd",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "titleColor": "#eeeeee",
            "titleWidth": 160,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/Startup-CEO-Project"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/Startup-CEO-Project/releases/latest/download/StartupCEOProject.zip"
                }
            ]
        },
        "weavercore": {
            "name": "WeaverCore",
            "date": "1/09/2022",
            "description": [
                "WeaverCore is a library that is used for developing new content for the game Hollow Knight",
                "It was what I used to develop Corrupted Kin and Inferno King Grimm",
                "The library allows you to develop new enemies, bosses, areas, and more from within the Unity Editor, allowing you to utilize all the capabilities of the Unity game engine",
                "There is a documentation website where you can learn how to use it, and contains full XML comments for all of the publicly used classes and methods in the library"
            ],
            "skills": [
                "Using DocFX to generate a website containing documentation and tutorials for the library",
                "Using C# XML comments to document the behaviour of all public classes and methods in the library"
            ],
            "tags": [
                "C#",
                "Unity 3D",
                "DocFX",
                "XML"
            ],
            "image": "screenshots/weavercore.png",
            "imageAVIF": "screenshots/avif/weavercore.avif",
            "video": "videos/weavercore.m4v",
            "color": "#6c6c6c",
            "textColor": "#dddddd",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#0b0e0e",
            "titleColor": "#c4c4c4",
            "titleWidth": 100,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/WeaverCore"
                },
                {
                    "name": "Documentation",
                    "link": "https://nickc01.github.io/WeaverCore/"
                }
            ]
        },
        "portfolio": {
            "name": "Portfolio Site",
            "date": "7/15/2022",
            "description": [
                "My portfolio site is a website made with HTML, Javascript and CSS for hosting all of my projects",
                "It was built completely from scratch, meaning it doesn't use templates or other frameworks like Wordpress or Bootstrap",
                "It was a way of challenging myself, seeing how well I could make a site using the basic tools needed for web development",
                "All the code used for controlling page navigation was built from scratch using plain Javascript"
            ],
            "skills": [
                "Using plain Javascript, HTML and CSS to control the website",
                "Using <a href=\"https://www.emailjs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Email JS</a> to send contact emails"
            ],
            "tags": [
                "HTML",
                "CSS",
                "JS"
            ],
            "image": "screenshots/portfolio-purple.png",
            "imageAVIF": "screenshots/avif/portfolio-purple.avif",
            "video": "videos/portfolio.m4v",
            "color": "#8a58b8",
            "textColor": "#dddddd",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#341e48",
            "titleColor": "#c4c4c4",
            "titleWidth": 110,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/nickc01.github.io"
                }
            ]
        },
        "escape-room-ar": {
            "name": "Escape Room AR",
            "date": "8/20/2022",
            "description": [
                "Escape Room AR is an augmented reality project created by Team NT studios, and is a project I contributed to over the course of 15 weeks",
                "It is an IOS/Android puzzle game where the player is tasked with completing a series of puzzles in order to beat an escape room",
                "The puzzles operate using Augmented Reality, which means that the player needs to point their camera over to a puzzle card in order for the puzzle to appear on their screen",
                "From there, the player can interact with the puzzle and solve them to advance, like figuring out a chest combination, or revealing new numbers for a code",
                "Some of the major contributions I did on the project include:<br/>- Fixing a few of the existing puzzles so they work with multiplayer<br/>- Implementing a login system and a profile system where the player can customize their avatar and username<br/>- Created a puzzle where the player needs to place down and rotate lasers in order to solve it<br/>- And other general bug fixing"
            ],
            "skills": [
                "Designing an interface for use with IOS and Android devices",
                "Using Vuforia to create puzzles using Augmented Reality",
                "Utilizing Azure Playfab for logging in and keeping track of player info, such as high-scores and friends",
                "Using Photon for multiple players to connect to a single lobby and allowing them to play the same puzzles"
            ],
            "tags": [
                "C#",
                "Unity3D",
                "Vuforia",
                "Playfab",
                "Photon",
                "IOS",
                "Android"
            ],
            "image": "screenshots/escape-room-ar.jpg",
            "imageAVIF": "screenshots/avif/escape-room-ar.avif",
            "video": "videos/escape-room-ar.m4v",
            "color": "#2a6dbf",
            "textColor": "#dddddd",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#1e3148",
            "titleColor": "#b6c4d1",
            "titleWidth": 135,
            "links": [
                {
                    "name": "Video Preview",
                    "link": "https://youtu.be/tgkWRKGtoVY"
                },
                {
                    "name": "Website",
                    "link": "https://www.teamntstudios.com/"
                }
            ]
        },


        "europa2109": {
            "name": "Europa 2109",
            "date": "11/13/2022",
            "description": [
                "Europa 2109 is a small game where you are sent to the moon Europa to explore the moon's underwater cave systems",
                "The goal of the game is to dig around and collect 5 red crystals to win the game",
                "You need to collect the crystals before running out of energy or loosing all of your health by bumping into walls",
                "The game was going to have a much larger scope, like a giant monster lurking underneath, but I didn't have enough time to include them"
            ],
            "skills": [
                "Using a marching cubes algorithm to generate polygonal terrain. This is based off a tutorial made by <a href=\"https://www.mapeditor.org\" target=\"_blank\" rel=\"noopener noreferrer\">Sebastian Lague</a>",
                "Using a 3D chunk system to only render terrain that's near the player, and to allow for terrain of nearly infinite size.",
                "Using multithreading via the C# Parallel namespace, async Tasks, and ComputeShaders to speed up the terrain generation process and the digging"
            ],
            "tags": [
                "C#",
                "Unity3D",
                "Multithreading",
                "Computer Shaders"
            ],
            "image": "screenshots/europa2109.jpg",
            "imageAVIF": "screenshots/avif/europa2109.avif",
            "video": "videos/europa2109.mp4",
            "color": "#3469ae",
            "textColor": "#dddddd",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#1e3148",
            "titleColor": "#b6c4d1",
            "titleWidth": 135,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/Europa-2109"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/Europa-2109/releases/latest/download/Europa2109.Windows.Build.zip"
                }
            ]
        },


        "net-neutralizer": {
            "name": "Net Neutralizer",
            "date": "8/18/2019",
            "description": [
                "Net Neutralizer is a card game me and a team of other students worked on",
                "It is a multiplayer turn-based game where your goal is to build up your own computer network, while taking down opponent networks",
                "When its a player's turn, they can either play a card from their hand, or they can draw a card from the deck",
                "There are three kinds of cards:</br> - Structure Cards - Can be used to upgrade your own network</br> - Attack Cards - Can be placed on opponent networks to attack them</br> - Defense Cards - Can be placed on your network to defend from attacks",
                "See video link below for more detailed instructions on how to play"
            ],
            "skills": [
                "Becoming the role as team leader to finish a high quality card game",
                "Communicating with other team members to help divy out tasks according to each team members' skills",
                "Using Sprints and Product Backlogs in order for everyone to keep track of what they are working on, and to balance the workload between team members"
            ],
            "credits": [
                {
                    "name": "Nicholas Cullen",
                    "label": "Team Lead / Designer"
                },
                {
                    "name": "Kyle Baker",
                    "label": "Artist"
                },
                {
                    "name": "Cesar Rodriguez",
                    "label": "Artist"
                },
                {
                    "name": "Brent Begay",
                    "label": "Designer"
                },
                {
                    "name": "Trent Smith",
                    "label": "Artist"
                }
            ],
            "tags": [
                "Game Design",
                "Group Project",
                "Card Game"
            ],
            "image": "screenshots/net-neutralizer.jpg",
            "imageAVIF": "screenshots/avif/net-neutralizer.avif",
            "video": "videos/net-neutralizer.mp4",
            "color": "#eca400",
            "textColor": "#dddddd",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#28200f",
            "titleColor": "#2e383a",
            "titleWidth": 135,
            "links": [
                {
                    "name": "Video Demonstration",
                    "link": "https://www.youtube.com/watch?v=hOCI4HpDlN0"
                },
                {
                    "name": "More Info",
                    "link": "https://1drv.ms/f/s!Aj62egREH4PT0Fj-1N732CTCdjam?e=udrpQw"
                }
            ]
        },

        "algo-visual": {
            "name": "AlgoVisual",
            "date": "4/11/2023",
            "description": [
                "AlgoVisual is a C++ program that showcases various data structures and sorting algorithms",
                "The program implements data structures such as binary search trees, linked lists, and graphs and applies sorting algorithms to them",
                "It also has performance metrics for quick_sort, insertion_sort, and binary_search_tree and displays each data structure graphically",
                "The program uses GTest for unit testing each data structure and algorithm",
                "You can use Arrow keys or WASD to move the camera around, or drag the background using the mouse. The scroll-wheel zooms in and out",
                "When you are in graph mode, you can also click on any node to move it around"
            ],
            "skills": [
                "Demonstrating knowledge of different data structures and algorithms",
                "Using performance metrics and Big O notation to figure out the performance of different functions",
                "Ability to visualize and display data structures graphically",
                "Familiarity with GTest for unit testing",
                "Using IMGUI and Raylib for graphically visualizing different data structures and algorithms"
            ],
            "credits": [
                {
                    "name": "Circle Sprites",
                    "label": "Kenney.nl",
                    "link": "https://www.kenney.nl/assets/ui-pack"
                }
            ],
            "tags": [
                "C++",
                "Data Structures",
                "Sorting Algorithms",
                "User Interface",
                "Unit Testing"
            ],
            "image": "screenshots/algo-visual.png",
            "imageAVIF": "screenshots/avif/algo-visual.avif",
            "video": "videos/algo-visual.m4v",
            "color": "#FFA500",
            "textColor": "#FFFFFF",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#FF4500",
            "titleColor": "#2e383a",
            "titleWidth": 180,
            "links": [
                {
                    "name": "GitHub Repository",
                    "link": "https://github.com/nickc01/AlgoVisual"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/AlgoVisual/releases"
                },
                {
                    "name": "Performance Metrics",
                    "link": "https://nickc01.github.io/AlgoVisual/"
                }
            ]
        },



        "factory-fiasco": {
            "name": "Factory Fiasco",
            "date": "2/13/2022",
            "description": [
                "Factory Fiasco is a physical puzzle game that I worked on with Don Smith",
                "It is a multiplayer game where each player tries to place a series of conveyor belts on their map in order to guide their colored boxes to the correct destinations, and in the correct order",
                "The main challenge with the game was to make sure that each player could affect the other without changing the solution to the puzzle",
                "We were also tasked with creating high-quality artwork for the project, which was going to be difficult since we aren't very great artists",
                "Another challenge was that Don Smith lived in Japan, which made communication difficult and only limited our time to talk to limited hours",
                "Despite these challenges, we were able to complete the game, and complete the artwork to make it look good",
                "We were able to allow players to affect each other by allowing an opponent to turn over a player's colored box to hide what color it was, forcing the player to remember the color combination",
                "Don was able to utilize his 3D printer to build 3D artwork for the project"
            ],
            "skills": [
                "Collaborating with a remote team member to deliver a high-quality project",
                "Developing a multiplayer puzzle game where players can affect each other",
                "Creating high-quality artwork for the game and instruction manual"
            ],
            "credits": [
                {
                    "name": "Don Smith",
                    "label": "Co-creator"
                }
            ],
            "tags": [
                "Physical Game",
                "Puzzle Game",
                "Multiplayer Game"
            ],
            "image": "screenshots/factory-fiasco.png",
            "imageAVIF": "screenshots/avif/factory-fiasco.avif",
            "video": "videos/factory-fiasco.mp4",
            "color": "#f0a22e",
            "textColor": "#ffffff",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#B8860B",
            "titleColor": "#2e383a",
            "titleWidth": 150,
            "links": [
                {
                    "name": "Resources",
                    "link": "https://1drv.ms/f/s!Aj62egREH4PT0Gly85YepwXERRco?e=O2P9bi"
                },
                {
                    "name": "Instructions Video",
                    "link": "https://www.youtube.com/watch?v=tAQdsij8OH0"
                }
            ]
        },


        "scratch-dl": {
            "name": "ScratchDL",
            "date": "4/19/2023",
            "description": [
                "ScratchDL is a C# program that allows you to download various types of data from Scratch.mit.edu",
                "You can use it to download projects, studios, comments, followers, following users, and more from the website",
                "The project uses Avalonia for creating a GUI that works on multiple platforms, and uses MVVM to seperate the Scratch API logic (Model) from the GUI logic (View), with a ViewModel class connecting the two together",
                "The project also takes advantage of DocFX, which is used for generating documentation sites from C# xml comments. The documentation site can be viewed <a href='https://nickc01.github.io/ScratchDL/' target='_blank' rel='noopener noreferrer'>here</a>",
                "Github actions are used on the Github repository for both <a target='_blank' rel='noopener noreferrer' href='https://github.com/nickc01/ScratchDL/actions/workflows/main.yml'>testing the code upon pushing to the repo (CI)</a> and <a target='_blank' rel='noopener noreferrer' href='https://github.com/nickc01/ScratchDL/actions/workflows/deploy-pages.yml'>building and deploying the DocFX site anytime a push to master occurs (CD)</a>"
            ],
            "skills": [
                "Using Avalonia for building GUI applications in a cross-platform manner",
                "Using the MVVM pattern to seperate the business logic from the GUI logic",
                "Using DocFX to create a documentation webpage for easily accessing API docs",
                "Using Github Actions for automatically testing the code upon pushing (Continous Integration)",
                "Using Github Actions for building and deploying the DocFX website anytime code is pushed to master (Continous Deployment)"
            ],
            "tags": [
                "Avalonia",
                "MVVM",
                "Scratch",
                "DocFX",
                "Github Actions",
                "CI/CD"
            ],
            "image": "screenshots/scratch-dl.png",
            "imageAVIF": "screenshots/avif/scratch-dl.avif",
            "video": "videos/scratch-dl.m4v",
            "color": "#f0a22e",
            "textColor": "#ffffff",
            "backgroundColor": "#2e383aBB",
            "perlinBackgroundColor": "#B8860B",
            "titleColor": "#2e383a",
            "titleWidth": 150,
            "links": [
                {
                    "name": "Github",
                    "link": "https://github.com/nickc01/ScratchDL"
                },
                {
                    "name": "Download",
                    "link": "https://github.com/nickc01/ScratchDL/releases/latest/download/ScratchDL.Release.zip"
                },
                {
                    "name": "Docs",
                    "link": "https://nickc01.github.io/ScratchDL/"
                }
            ]
        }


    }
}