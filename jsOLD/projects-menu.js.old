/*//var selectedProjectArea = document.getElementById("selected-project-area");
//var projectsArea = document.getElementById("content-area");
var projectOpen = false;

var projectDetails = null;

var colorInterpTime = 200.0 / 1000.0;

var colorSetter = null;

var originalTopColor = null;
var originalBottomColor = null;
var fontSize = parseFloat(window.getComputedStyle(document.body).getPropertyValue('font-size').slice(0, -2));
console.log("FONT SIZE = " + fontSize);

function componentToHex(c) {
	var hex = Math.round(c).toString(16);
	return hex.length == 1 ? "0" + hex : hex;
}

function rgbToHex(color) {
  var result = "#" + componentToHex(color[0]) + componentToHex(color[1]) + componentToHex(color[2]);
  if (color.length >= 4) {
	  result += componentToHex(color[3]);
  }
  return result;
}

function hexToRgb(hex) {
	hex = hex.replace(" ","");
  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  if (result)
  {
	  return [parseInt(result[1], 16),parseInt(result[2], 16),parseInt(result[3], 16),parseInt(result[4], 16) ];
  }
  else {
  	result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
	if (result)
	{
		return [parseInt(result[1], 16),parseInt(result[2], 16),parseInt(result[3], 16),255 ];
	}
	return null;
  }
}

function OpenProjectWindow(sourceElement)
{
	if (projectOpen) {
		return;
	}
	projectOpen = true;
	DisableWindowScrolling();
	if (colorSetter === null) {
		clearTimeout(colorSetter);
		colorSetter = null;
	}
	if (sourceElement !== undefined) {
		var project = projectDetails[sourceElement.id];

		document.documentElement.style.setProperty('--project-window-top-color', project.color);
		document.documentElement.style.setProperty('--project-window-bottom-color', project.backgroundColor);
	}
	var selectedProjectArea = document.getElementById("selected-project-area")
	selectedProjectArea.classList.remove("fade-out-proj-window");
	selectedProjectArea.classList.add("fade-in-proj-window");
	onResize();

	var videoAreaElement = document.getElementById("video-area");
	var vs = videoAreaElement.getElementsByTagName("video");
	if (vs.length > 0) {
		var videoElement = vs[0];
		videoElement.load();
	}
	//videoElement.play();
}

function CloseButtonHover()
{
	if (window.innerWidth < 950 && is_touch_enabled()) {
		CloseProjectWindow();
	}
}

function CloseProjectWindow()
{
	if (!projectOpen) {
		return;
	}
	EnableWindowScrolling();
	var selectedProjectArea = document.getElementById("selected-project-area")
	selectedProjectArea.classList.remove("fade-in-proj-window");
	selectedProjectArea.classList.add("fade-out-proj-window");
	projectOpen = false;
	ResetColors();
}

var oldScrollPos = null;

function DisableWindowScrolling()
{
	oldScrollPos = [window.scrollX, window.scrollY];
	window.addEventListener('scroll',_noScrollCallback);
	//document.documentElement.style.overflow = "hidden hidden";
	document.documentElement.style.touchAction = "none";
	document.body.style.touchAction = "none";
}

function EnableWindowScrolling()
{
	window.removeEventListener('scroll',_noScrollCallback);
	//document.documentElement.style.overflow = "hidden auto";
	document.documentElement.style.touchAction = null;
	document.body.style.touchAction = null;
	document.documentElement.style.overflow = null;
}

function _noScrollCallback()
{
	if (window.innerWidth >= 950) {
		window.scrollTo(oldScrollPos[0],oldScrollPos[1]);
	}
}

function onResize()
{
	if (projectOpen) {
		if (window.innerWidth < 950) {
			document.documentElement.style.overflow = "hidden";
		}
		else {
			document.documentElement.style.overflow = null;
		}
	}
}

window.addEventListener('resize', onResize);

//OpenProjectWindow();

function UpdateSelectedProject(sourceElement) {
	if (colorSetter === null) {
		clearTimeout(colorSetter);
		colorSetter = null;
	}
	var root = document.documentElement;

	var project = projectDetails[sourceElement.id];

	var closeButton = document.getElementById("close-button-svg");

	for (var i = 0; i < closeButton.childElementCount; i++) {
		var child = closeButton.children[i];
		child.setAttribute("width", 3.75 * fontSize);
		child.setAttribute("height", 0.25 * fontSize);
    }

	var projectTitle = document.getElementById("selected-project-title");

	projectTitle.textContent = project.name;

	if (project.titleWidth != undefined) {
		projectTitle.parentElement.setAttribute("viewBox", "0 " + (-(fontSize - 16)) + " " + (project.titleWidth * fontSize / 16) + " " + (25 * fontSize / 16));
	}


	if (project.titleColor != undefined) {
		root.style.setProperty('--title-text-color', project.titleColor);
	}
	else {
		root.style.setProperty('--title-text-color', project.textColor);
    }

	//root.style.setProperty('--project-title-font-size', project.fontSize);
	root.style.setProperty('--project-background-image', "url(" + project.image + ")");
	root.style.setProperty('--project-text-color', project.textColor);

	var bottomColor = hexToRgb(project.backgroundColor);
	bottomColor[3] = 255;

	root.style.setProperty('--project-window-bottom-color-solid', rgbToHex(bottomColor));

	//var titleElement = document.getElementById("contents-title");
	//titleElement.innerHTML = project.name;

	var descriptionElement = document.getElementById("description");
	var date = "<h3>" + project.date + "</h3>";

	var description = "";

	for (var i = 0; i < project.description.length; i++) {
		description += "</br>" + project.description[i] + ".";
	}

	descriptionElement.innerHTML = date + description;

	if (project.skills != undefined) {
		var skills = "</br><h3>Skills:</h3>";

		for (var i = 0; i < project.skills.length; i++) {
			skills += " - " + project.skills[i] + "</br>";
		}

		descriptionElement.innerHTML += skills;
    }

	if (project.credits != undefined) {
		var credits = "</br><h3>Credits:</h3>";

		for (var i = 0; i < project.credits.length; i++) {
			var credit = project.credits[i];
			credits += " - " + credit.name + ": <a href=\"" + credit.link + "\" target=\"_blank\" rel=\"noopener noreferrer\">" + credit.label + "</a></br>";
		}

		descriptionElement.innerHTML += credits;
    }

	descriptionElement.innerHTML += CreateLinksElement(project.links);

	//TODO - DO VIDEO
	var videoAreaElement = document.getElementById("video-area");
	var vs = videoAreaElement.getElementsByTagName("video");
	if (vs.length > 0) {
		var videoElement = vs[0];
		var sources = videoAreaElement.getElementsByTagName("source");
		var sourceElement = null;
		if (sources.length == 0) {
			sourceElement = document.createElement('source');
			videoElement.appendChild(sourceElement);
		}
		else {
			sourceElement = sources[0];
		}
		sourceElement.setAttribute('src',project.video);
		//videoElement.pause();
		//videoElement.load();
		//videoElement.play();
	}

	var perlinColor = null;
	var perlinBackgroundColor = null;

	if (project.hasOwnProperty("perlinColor")) {
		perlinColor = hexToRgb(project.perlinColor);
	}
	else {
		perlinColor = hexToRgb(project.color);
	}

	if (project.hasOwnProperty("perlinBackgroundColor")) {
		perlinBackgroundColor = hexToRgb(project.perlinBackgroundColor);
	}
	else {
		perlinBackgroundColor = hexToRgb(project.backgroundColor);
		perlinBackgroundColor[0] /= 4.0;
		perlinBackgroundColor[1] /= 4.0;
		perlinBackgroundColor[2] /= 4.0;

		perlinBackgroundColor = lerpColor(perlinColor,perlinBackgroundColor,0.8);
	}

	InterpolateToNewColor(perlinColor,perlinBackgroundColor,colorInterpTime);


	colorSetter = setTimeout(() => {
		root.style.setProperty('--project-window-top-color', project.color);
		root.style.setProperty('--project-window-bottom-color', project.backgroundColor);
		colorSetter = null;
	},colorInterpTime * 500);
	//AddRoutine(interpolateCSSVars(project,colorInterpTime));
}

function* interpolateCSSVars(project, time)
{


}

var resetColorsAdded = false;

function ResetColors()
{

	if (projectOpen || !backgroundLoaded) 
	{
		return;
	}
	if (colorSetter === null) {
		clearTimeout(colorSetter);
		colorSetter = null;
	}
	if (originalTopColor !== undefined && originalTopColor !== null) {
		colorSetter = setTimeout(() => {
			document.documentElement.style.setProperty('--project-window-top-color', originalTopColor);
			document.documentElement.style.setProperty('--project-window-bottom-color', originalBottomColor);
			colorSetter = null;
		},colorInterpTime * 500);
	}
	if (defaultTopColor != undefined && defaultTopColor !== null) {
		InterpolateToNewColor(defaultTopColor,defaultBottomColor,colorInterpTime);
	}
}

function OpenProject(sourceElement)
{
	if (projectDetails === null) {
		return;
	}

	OpenProjectWindow(sourceElement);
}

function FetchProjectDetails()
{
	fetch("projects.json").then(response =>
	{
		return response.json();
	}).then(value =>
	{
		projectDetails = value["projects"];
		console.log("Project Details = " + projectDetails["inferno-king-grimm"].name);
	});
}

function CreateLinksElement(links)
{
	if (links === undefined || links == null) {
		return "";
	}
	var outerHTML = "<div id=\"description-links\" class=\"unhighlightable\">";
	for (var i = 0; i < links.length; i++) {
		var link = links[i];
		outerHTML += "<a href=\"" + link.link + "\" target=\"_blank\" rel=\"noopener noreferrer\">" + link.name + "</a>";
	}
	outerHTML += "</div>";
	return outerHTML;
}

FetchProjectDetails();

function is_touch_enabled() {
    return ( 'ontouchstart' in window ) ||
           ( navigator.maxTouchPoints > 0 ) ||
           ( navigator.msMaxTouchPoints > 0 );
	   }

onStateChange.push(state =>
{
	if (state !== StateEnum.Projects) {
		ResetColors();
		return;
	}

	var projectAreas = document.getElementsByClassName("content-area");
	for (var i = 0; i < projectAreas.length; i++) {
		//Distribute(projectAreas.item(i));
		var projectsArea = projectAreas.item(i);

		var divs = projectsArea.getElementsByTagName("div");

		for (var i = 0; i < divs.length; i++) {
			registerProjectEvent(divs[i],'click',source =>
			{
				OpenProject(source);
			});
			registerProjectEvent(divs[i],'mouseover',source =>
			{
				UpdateSelectedProject(source);
				if (is_touch_enabled() && window.innerWidth < 950) {
					OpenProject(source);
				}
			});
			registerProjectEvent(divs[i],'mouseout',source => ResetColors());
		}
	}

	//var projectsArea = document.getElementById("content-area");

	var rootStyle = window.getComputedStyle(document.documentElement);
	originalTopColor = rootStyle.getPropertyValue("--project-window-top-color");
	originalBottomColor = rootStyle.getPropertyValue("--project-window-bottom-color-solid");
});

function registerProjectEvent(element,evtName,func)
{
	element.addEventListener(evtName,source => {
		var currentElement = source.target;
		while (currentElement != null && currentElement.parentNode != null && !currentElement.parentNode.classList.contains("content-area")) {
			currentElement = currentElement.parentNode;
		}
		func(currentElement);
	});
}
*/